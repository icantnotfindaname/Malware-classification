import matplotlib.pyplot as plt
import constants
from img_b2m import img_b2m
from PIL import Image
from collections import namedtuple
from img_process import img_process
from utils import get_file_length, generate_file_path, generate_img_path, load_file, save_img, is_folder_exists, create_folder, get_time_string


def main():
    for id in constants.EXAMPLE_LIST:
        file_path = generate_file_path(constants.dst_bytes, id)
        binary_file = load_file(file_path)
        binary_file_length = get_file_length(file_path)
        img_b2med = img_b2m(binary_file, binary_file_length,
                            constants.ist_b2med)
        save_img(img_b2med, constants.ist_b2med, id)
        img_processed = img_process(img_b2med, constants.ist_processed)
        save_img(img_processed, constants.ist_processed, id)

    img_visualization_for_b2med_vs_processed(
        constants.ist_b2med, constants.ist_processed, constants.is_b2med_vs_processed, constants.EXAMPLE_LIST)


def img_visualization_for_b2med_vs_processed(ist_b2med,
                                             ist_processed, ist_b2med_vs_processed, example_list):
    plt.figure(figsize=(10, 4))

    for i in range(len(example_list)):
        id = example_list[i]
        img_path_b2med = generate_img_path(ist_b2med, id)
        img_path_processed = generate_img_path(ist_processed, id)
        img_b2med = Image.open(img_path_b2med)
        img_processed = Image.open(img_path_processed)

        plt.subplot(2, len(example_list), i + 1)
        plt_set_param(f'Example.{i+1}', img_b2med)

        plt.subplot(2, len(example_list), i + 1 + len(example_list))
        plt_set_param(f'Example.{i+1}', img_processed)

    plt.tight_layout(pad=0.5)
    if not is_folder_exists(ist_b2med_vs_processed.dir):
        create_folder(ist_b2med_vs_processed.dir)
    img_save_path = generate_img_path(
        ist_b2med_vs_processed, id=get_time_string())
    plt.savefig(img_save_path)
    plt.show()


def plt_set_param(title, img):
    plt.tick_params(labelbottom=False, labelleft=False)
    plt.axis('off')
    plt.imshow(img, cmap='gray')
    plt.title(title, constants.FONT_DICT)


if __name__ == '__main__':
    main()
